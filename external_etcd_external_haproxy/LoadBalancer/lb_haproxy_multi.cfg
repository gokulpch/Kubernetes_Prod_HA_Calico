##Configuration for multiple clusters and a single LB
global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # Default ciphers to use on SSL-enabled listening sockets.
        # For more information, see ciphers(1SSL). This list is from:
        #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
        ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
        ssl-default-bind-options no-sslv3

defaults
        log     global
        mode    http
        option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

frontend http_apiserver
        bind 172.16.80.41:8080
        mode http
        default_backend http_apiservers

backend http_apiservers
        mode http
        balance roundrobin
        option httpchk GET /healthz
        http-check expect status 200
        server master1 172.16.80.230:8080 check
        server master2 172.16.80.109:8080 check
        server master3 172.16.80.104:8080 check

frontend https_apiserver
        bind 172.16.80.41:6443
        mode tcp
        default_backend https_apiservers

backend https_apiservers
        mode tcp
        balance roundrobin
        server master1 172.16.80.230:6443 check 
        server master2 172.16.80.109:6443 check 
        server master3 172.16.80.104:6443 check 


frontend http_apiserver2
        bind 172.16.80.42:8080
        mode http
        default_backend http_apiservers2

backend http_apiservers2
        mode http
        balance roundrobin
        option httpchk GET /healthz
        http-check expect status 200
        server master1-2 172.16.80.71:8080 check
        server master2-2 172.16.80.72:8080 check
        server master3-2 172.16.80.76:8080 check

frontend https_apiserver2
        bind 172.16.80.42:6443
        mode tcp
        default_backend https_apiservers2

backend https_apiservers2
        mode tcp
        balance roundrobin
        server master1-2 172.16.80.71:6443 check
        server master2-2 172.16.80.72:6443 check
        server master3-2 172.16.80.76:6443 check
